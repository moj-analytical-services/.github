  
name: Test
on:
  - pull_request

jobs:
  preview:
    name: Test
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: ["3.8", "3.9", "3.10"]
        poetry-install: [from-lock-file, fresh-install]
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f pyproject.toml ]
          then
            if [ "${{ matrix.poetry-install }}" == "from-lock-file" ]; then
              echo "Installing dependencies from lock file"
            else
              echo "Removing lock file and installing latest possible dependencies"
              rm poetry.lock
            fi
            pip install poetry
            poetry config virtualenvs.create false \
              && poetry install --no-interaction --no-ansi
          elif [ -f requirements.txt ]
          then
            pip install -r requirements.txt
          fi

      - name: Run tests with pytest
        run: |
          if [ -d tests ]; then pytest tests/ -vv; fi
